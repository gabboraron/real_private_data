import json
import logging
from .the_config import TheConfig
from .arg import Arg

def ConfigIter() -> Arg:
    for prop in TheConfig.__dict__:
        if isinstance(TheConfig.__dict__[prop], Arg):
            TheConfig.__dict__[prop].name = prop
            yield TheConfig.__dict__[prop]
    raise StopIteration

def ConfigIterPubilc() -> Arg:
    for prop in ConfigIter():
        if prop.is_public:
            yield prop
    raise StopIteration

def configToDict(onlyPublic = True) -> dict:
    ret = {}
    configIter = ConfigIterPubilc() if onlyPublic else ConfigIter()
    for c in configIter:
        ret[c.name] = c.value
    return ret

def configToJsString():
    jsonDict = configToDict()
    jsonStr = json.dumps(jsonDict)
    return """'use strict';
// DO NOT MODIFY THIS FILE
// THIS FILE IS GENERATED BY config/tools.py
// if you want to modify this file, please check config/the_config.py
// or config.json
window.theConfig = """ + jsonStr + ";"

def configToJs(fileName:str):
    with open(fileName,"w") as f:
        f.write(configToJsString())

def configLog(onlyPublic = True):
    configDict = configToDict(onlyPublic)
    logging.info("Config:")
    for (k,v) in configDict.items():
        logging.info("{}: {}".format(k, v))